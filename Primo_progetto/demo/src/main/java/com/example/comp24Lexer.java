// Generated from c:/Users/Giuseppe/Desktop/Practica y Construccion de Compiladores/Primo_progetto/demo/src/main/java/com/example/comp24.g4 by ANTLR 4.13.1

package com.example;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class comp24Lexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		FOR=1, IF=2, ELSE=3, WHILE=4, RETURN=5, INT=6, DOUBLE=7, CHAR=8, VOID=9, 
		COMA=10, PA=11, PC=12, LLA=13, LLC=14, ASIGN=15, PYC=16, SUMA=17, RESTA=18, 
		MULT=19, DIV=20, MOD=21, AND=22, OR=23, NOT=24, ID=25, OPERADOR_UNARIO=26, 
		OPERADOR_BINARIO=27, COMPARACION=28, NUMERO=29, WS=30;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LETRA", "DIGITO", "FOR", "IF", "ELSE", "WHILE", "RETURN", "INT", "DOUBLE", 
			"CHAR", "VOID", "COMA", "PA", "PC", "LLA", "LLC", "ASIGN", "PYC", "SUMA", 
			"RESTA", "MULT", "DIV", "MOD", "AND", "OR", "NOT", "ID", "OPERADOR_UNARIO", 
			"OPERADOR_BINARIO", "COMPARACION", "NUMERO", "WS"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "'for'", "'if'", "'else'", "'while'", "'return'", "'int'", "'double'", 
			"'char'", "'void'", "','", "'('", "')'", "'{'", "'}'", "'='", "';'", 
			"'+'", "'-'", "'*'", "'/'", "'%'", "'&&'", "'||'", "'!'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "FOR", "IF", "ELSE", "WHILE", "RETURN", "INT", "DOUBLE", "CHAR", 
			"VOID", "COMA", "PA", "PC", "LLA", "LLC", "ASIGN", "PYC", "SUMA", "RESTA", 
			"MULT", "DIV", "MOD", "AND", "OR", "NOT", "ID", "OPERADOR_UNARIO", "OPERADOR_BINARIO", 
			"COMPARACION", "NUMERO", "WS"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public comp24Lexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "comp24.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000\u001e\u00bb\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002"+
		"\u0001\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002"+
		"\u0004\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002"+
		"\u0007\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002"+
		"\u000b\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e"+
		"\u0002\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011"+
		"\u0002\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014"+
		"\u0002\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017"+
		"\u0002\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a"+
		"\u0002\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d"+
		"\u0002\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0001\u0000\u0001\u0000"+
		"\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001\u0002\u0001\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004"+
		"\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\u0007\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\n\u0001\u000b\u0001\u000b\u0001\f\u0001\f\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0001\u0011"+
		"\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001\u0013\u0001\u0014"+
		"\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0017"+
		"\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0018\u0001\u0019"+
		"\u0001\u0019\u0001\u001a\u0001\u001a\u0003\u001a\u0096\b\u001a\u0001\u001a"+
		"\u0001\u001a\u0001\u001a\u0005\u001a\u009b\b\u001a\n\u001a\f\u001a\u009e"+
		"\t\u001a\u0001\u001b\u0001\u001b\u0001\u001b\u0001\u001b\u0003\u001b\u00a4"+
		"\b\u001b\u0001\u001c\u0001\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0003"+
		"\u001d\u00b1\b\u001d\u0001\u001e\u0004\u001e\u00b4\b\u001e\u000b\u001e"+
		"\f\u001e\u00b5\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0000\u0000"+
		" \u0001\u0000\u0003\u0000\u0005\u0001\u0007\u0002\t\u0003\u000b\u0004"+
		"\r\u0005\u000f\u0006\u0011\u0007\u0013\b\u0015\t\u0017\n\u0019\u000b\u001b"+
		"\f\u001d\r\u001f\u000e!\u000f#\u0010%\u0011\'\u0012)\u0013+\u0014-\u0015"+
		"/\u00161\u00173\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001e\u0001"+
		"\u0000\u0005\u0002\u0000AZaz\u0001\u000009\u0005\u0000%%*+--//^^\u0002"+
		"\u0000<<>>\u0003\u0000\t\n\r\r  \u00c2\u0000\u0005\u0001\u0000\u0000\u0000"+
		"\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000"+
		"\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f"+
		"\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013"+
		"\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017"+
		"\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b"+
		"\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f"+
		"\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000"+
		"\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000"+
		"\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000"+
		"-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001"+
		"\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000"+
		"\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000"+
		";\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001"+
		"\u0000\u0000\u0000\u0001A\u0001\u0000\u0000\u0000\u0003C\u0001\u0000\u0000"+
		"\u0000\u0005E\u0001\u0000\u0000\u0000\u0007I\u0001\u0000\u0000\u0000\t"+
		"L\u0001\u0000\u0000\u0000\u000bQ\u0001\u0000\u0000\u0000\rW\u0001\u0000"+
		"\u0000\u0000\u000f^\u0001\u0000\u0000\u0000\u0011b\u0001\u0000\u0000\u0000"+
		"\u0013i\u0001\u0000\u0000\u0000\u0015n\u0001\u0000\u0000\u0000\u0017s"+
		"\u0001\u0000\u0000\u0000\u0019u\u0001\u0000\u0000\u0000\u001bw\u0001\u0000"+
		"\u0000\u0000\u001dy\u0001\u0000\u0000\u0000\u001f{\u0001\u0000\u0000\u0000"+
		"!}\u0001\u0000\u0000\u0000#\u007f\u0001\u0000\u0000\u0000%\u0081\u0001"+
		"\u0000\u0000\u0000\'\u0083\u0001\u0000\u0000\u0000)\u0085\u0001\u0000"+
		"\u0000\u0000+\u0087\u0001\u0000\u0000\u0000-\u0089\u0001\u0000\u0000\u0000"+
		"/\u008b\u0001\u0000\u0000\u00001\u008e\u0001\u0000\u0000\u00003\u0091"+
		"\u0001\u0000\u0000\u00005\u0095\u0001\u0000\u0000\u00007\u00a3\u0001\u0000"+
		"\u0000\u00009\u00a5\u0001\u0000\u0000\u0000;\u00b0\u0001\u0000\u0000\u0000"+
		"=\u00b3\u0001\u0000\u0000\u0000?\u00b7\u0001\u0000\u0000\u0000AB\u0007"+
		"\u0000\u0000\u0000B\u0002\u0001\u0000\u0000\u0000CD\u0007\u0001\u0000"+
		"\u0000D\u0004\u0001\u0000\u0000\u0000EF\u0005f\u0000\u0000FG\u0005o\u0000"+
		"\u0000GH\u0005r\u0000\u0000H\u0006\u0001\u0000\u0000\u0000IJ\u0005i\u0000"+
		"\u0000JK\u0005f\u0000\u0000K\b\u0001\u0000\u0000\u0000LM\u0005e\u0000"+
		"\u0000MN\u0005l\u0000\u0000NO\u0005s\u0000\u0000OP\u0005e\u0000\u0000"+
		"P\n\u0001\u0000\u0000\u0000QR\u0005w\u0000\u0000RS\u0005h\u0000\u0000"+
		"ST\u0005i\u0000\u0000TU\u0005l\u0000\u0000UV\u0005e\u0000\u0000V\f\u0001"+
		"\u0000\u0000\u0000WX\u0005r\u0000\u0000XY\u0005e\u0000\u0000YZ\u0005t"+
		"\u0000\u0000Z[\u0005u\u0000\u0000[\\\u0005r\u0000\u0000\\]\u0005n\u0000"+
		"\u0000]\u000e\u0001\u0000\u0000\u0000^_\u0005i\u0000\u0000_`\u0005n\u0000"+
		"\u0000`a\u0005t\u0000\u0000a\u0010\u0001\u0000\u0000\u0000bc\u0005d\u0000"+
		"\u0000cd\u0005o\u0000\u0000de\u0005u\u0000\u0000ef\u0005b\u0000\u0000"+
		"fg\u0005l\u0000\u0000gh\u0005e\u0000\u0000h\u0012\u0001\u0000\u0000\u0000"+
		"ij\u0005c\u0000\u0000jk\u0005h\u0000\u0000kl\u0005a\u0000\u0000lm\u0005"+
		"r\u0000\u0000m\u0014\u0001\u0000\u0000\u0000no\u0005v\u0000\u0000op\u0005"+
		"o\u0000\u0000pq\u0005i\u0000\u0000qr\u0005d\u0000\u0000r\u0016\u0001\u0000"+
		"\u0000\u0000st\u0005,\u0000\u0000t\u0018\u0001\u0000\u0000\u0000uv\u0005"+
		"(\u0000\u0000v\u001a\u0001\u0000\u0000\u0000wx\u0005)\u0000\u0000x\u001c"+
		"\u0001\u0000\u0000\u0000yz\u0005{\u0000\u0000z\u001e\u0001\u0000\u0000"+
		"\u0000{|\u0005}\u0000\u0000| \u0001\u0000\u0000\u0000}~\u0005=\u0000\u0000"+
		"~\"\u0001\u0000\u0000\u0000\u007f\u0080\u0005;\u0000\u0000\u0080$\u0001"+
		"\u0000\u0000\u0000\u0081\u0082\u0005+\u0000\u0000\u0082&\u0001\u0000\u0000"+
		"\u0000\u0083\u0084\u0005-\u0000\u0000\u0084(\u0001\u0000\u0000\u0000\u0085"+
		"\u0086\u0005*\u0000\u0000\u0086*\u0001\u0000\u0000\u0000\u0087\u0088\u0005"+
		"/\u0000\u0000\u0088,\u0001\u0000\u0000\u0000\u0089\u008a\u0005%\u0000"+
		"\u0000\u008a.\u0001\u0000\u0000\u0000\u008b\u008c\u0005&\u0000\u0000\u008c"+
		"\u008d\u0005&\u0000\u0000\u008d0\u0001\u0000\u0000\u0000\u008e\u008f\u0005"+
		"|\u0000\u0000\u008f\u0090\u0005|\u0000\u0000\u00902\u0001\u0000\u0000"+
		"\u0000\u0091\u0092\u0005!\u0000\u0000\u00924\u0001\u0000\u0000\u0000\u0093"+
		"\u0096\u0003\u0001\u0000\u0000\u0094\u0096\u0005_\u0000\u0000\u0095\u0093"+
		"\u0001\u0000\u0000\u0000\u0095\u0094\u0001\u0000\u0000\u0000\u0096\u009c"+
		"\u0001\u0000\u0000\u0000\u0097\u009b\u0003\u0001\u0000\u0000\u0098\u009b"+
		"\u0003\u0003\u0001\u0000\u0099\u009b\u0005_\u0000\u0000\u009a\u0097\u0001"+
		"\u0000\u0000\u0000\u009a\u0098\u0001\u0000\u0000\u0000\u009a\u0099\u0001"+
		"\u0000\u0000\u0000\u009b\u009e\u0001\u0000\u0000\u0000\u009c\u009a\u0001"+
		"\u0000\u0000\u0000\u009c\u009d\u0001\u0000\u0000\u0000\u009d6\u0001\u0000"+
		"\u0000\u0000\u009e\u009c\u0001\u0000\u0000\u0000\u009f\u00a0\u0005+\u0000"+
		"\u0000\u00a0\u00a4\u0005+\u0000\u0000\u00a1\u00a2\u0005-\u0000\u0000\u00a2"+
		"\u00a4\u0005-\u0000\u0000\u00a3\u009f\u0001\u0000\u0000\u0000\u00a3\u00a1"+
		"\u0001\u0000\u0000\u0000\u00a48\u0001\u0000\u0000\u0000\u00a5\u00a6\u0007"+
		"\u0002\u0000\u0000\u00a6:\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005=\u0000"+
		"\u0000\u00a8\u00b1\u0005=\u0000\u0000\u00a9\u00aa\u0005!\u0000\u0000\u00aa"+
		"\u00b1\u0005=\u0000\u0000\u00ab\u00b1\u0007\u0003\u0000\u0000\u00ac\u00ad"+
		"\u0005<\u0000\u0000\u00ad\u00b1\u0005=\u0000\u0000\u00ae\u00af\u0005>"+
		"\u0000\u0000\u00af\u00b1\u0005=\u0000\u0000\u00b0\u00a7\u0001\u0000\u0000"+
		"\u0000\u00b0\u00a9\u0001\u0000\u0000\u0000\u00b0\u00ab\u0001\u0000\u0000"+
		"\u0000\u00b0\u00ac\u0001\u0000\u0000\u0000\u00b0\u00ae\u0001\u0000\u0000"+
		"\u0000\u00b1<\u0001\u0000\u0000\u0000\u00b2\u00b4\u0003\u0003\u0001\u0000"+
		"\u00b3\u00b2\u0001\u0000\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000"+
		"\u00b5\u00b3\u0001\u0000\u0000\u0000\u00b5\u00b6\u0001\u0000\u0000\u0000"+
		"\u00b6>\u0001\u0000\u0000\u0000\u00b7\u00b8\u0007\u0004\u0000\u0000\u00b8"+
		"\u00b9\u0001\u0000\u0000\u0000\u00b9\u00ba\u0006\u001f\u0000\u0000\u00ba"+
		"@\u0001\u0000\u0000\u0000\u0007\u0000\u0095\u009a\u009c\u00a3\u00b0\u00b5"+
		"\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}